{"__symbolic":"module","version":3,"metadata":{"TableModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule"},{"__symbolic":"reference","name":"ɵa"}],"bootstrap":[{"__symbolic":"reference","name":"ɵb"}],"exports":[{"__symbolic":"reference","name":"ɵb"}],"providers":[]}]}],"members":{}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵk"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule"},{"__symbolic":"reference","module":"ngx-pagination","name":"NgxPaginationModule"}],"exports":[{"__symbolic":"reference","name":"ɵb"}]}]}],"members":{}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"ngx-table","providers":[{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"}],"template":"\n    <div class=\"ngx-container\">\n      <div class=\"ngx-columns\">\n        <div class=\"ngx-column ngx-col-4 ngx-col-mr-auto\"></div>\n        <div class=\"ngx-column ngx-col-3\">\n          <global-search\n            *ngIf=\"config.globalSearchEnabled\"\n            (globalUpdate)=\"onGlobalSearch($event)\">\n          </global-search>\n        </div>\n      </div>\n      <div class=\"ngx-columns\">\n        <table class=\"ngx-table ngx-table-striped ngx-table-hover\">\n          <thead>\n          <tr class=\"ngx-table__header\" *ngIf=\"config.headerEnabled\">\n            <ng-container *ngFor=\"let column of columns\">\n              <th class=\"ngx-table__header-cell\"\n                  (click)=\"orderBy(column['key'])\">\n                <div class=\"ngx-d-inline\">{{ column['title'] }}</div>\n                <span *ngIf=\"resource.order[column['key']]==='asc' \"\n                      [style.display]=\"config.orderEnabled?'':'none' \"\n                      class=\"ngx-icon ngx-icon-arrow-up\">\n                </span>\n                <span *ngIf=\"resource.order[column['key']]==='desc' \"\n                      [style.display]=\"config.orderEnabled?'':'none' \"\n                      class=\"ngx-icon ngx-icon-arrow-down\">\n                </span>\n              </th>\n            </ng-container>\n            <th *ngIf=\"config.additionalActions || config.detailsTemplate\"\n                class=\"ngx-table__header-cell-additional-actions\">\n              <div class=\"ngx-dropdown ngx-active ngx-dropdown-right\"\n                   *ngIf=\"config.additionalActions\"\n                   [class.ngx-active]=\"menuActive\">\n                <a class=\"ngx-btn ngx-btn-link\" (click)=\"menuActive = !menuActive\">\n                  <span class=\"ngx-icon ngx-icon-menu\"></span>\n                </a>\n                <ul class=\"ngx-menu ngx-table__table-menu\">\n                  <li class=\"ngx-menu-item\">\n                    <csv-export *ngIf=\"config.exportEnabled\"></csv-export>\n                  </li>\n                </ul>\n              </div>\n            </th>\n          </tr>\n          <tr *ngIf=\"config.searchEnabled\"\n              class=\"ngx-table__sortHeader\">\n            <ng-container *ngFor=\"let column of columns\">\n              <th>\n                <table-header (update)=\"onSearch($event)\" [column]=\"column\"></table-header>\n              </th>\n            </ng-container>\n            <th *ngIf=\"config.additionalActions || config.detailsTemplate\"></th>\n          </tr>\n          </thead>\n          <tbody *ngIf=\"data && !config.isLoading\">\n          <ng-container *ngIf=\"rowTemplate\">\n            <tr *ngFor=\"let row of data | search : term | global : globalSearchTerm | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\n                  let rowIndex = index\"\n                (click)=\"clickedCell($event, row, '', '', rowIndex)\"\n                [class.ngx-table__table-row--selected]=\"rowIndex == selectedRow && !config.selectCell\">\n              <ng-container [ngTemplateOutlet]=\"rowTemplate\"\n                            [ngTemplateOutletContext]=\"{ $implicit: row }\">\n              </ng-container>\n            </tr>\n          </ng-container>\n          <ng-container *ngIf=\"!rowTemplate && !config.groupRows\">\n            <ng-container\n              *ngFor=\"let row of data | search : term | global : globalSearchTerm | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\n                      let rowIndex = index\"\n              [class.ngx-table__table-row--selected]=\"rowIndex == selectedRow && !config.selectCell\">\n              <tr>\n                <ng-container *ngFor=\"let column of columns; let colIndex = index\">\n                  <td (click)=\"clickedCell($event, row, column['key'], colIndex, rowIndex)\"\n                      [class.ngx-table__table-col--selected]=\"colIndex == selectedCol && !config.selectCell\"\n                      [class.ngx-table__table-cell--selected]=\"colIndex == selectedCol && rowIndex == selectedRow && !config.selectCol && !config.selectRow\"\n                  >\n                    <div>{{ row[column['key']] }}</div>\n                  </td>\n                </ng-container>\n                <td *ngIf=\"config.additionalActions || config.detailsTemplate\">\n                  <span class=\"ngx-icon ngx-c-hand\"\n                        [class.ngx-icon-arrow-down]=\"selectedDetailsTemplateRowId === rowIndex\"\n                        [class.ngx-icon-arrow-right]=\"selectedDetailsTemplateRowId !== rowIndex\"\n                        (click)=\"selectRowId(rowIndex)\">\n                  </span>\n                </td>\n              </tr>\n              <tr *ngIf=\"config.detailsTemplate && selectedDetailsTemplateRowId === rowIndex\">\n                <td [attr.colspan]=\"columns.length + 1\">\n                  <ng-container\n                    [ngTemplateOutlet]=\"detailsTemplate\"\n                    [ngTemplateOutletContext]=\"{ $implicit: row }\">\n                  </ng-container>\n                </td>\n              </tr>\n            </ng-container>\n          </ng-container>\n          <ng-container *ngIf=\"!rowTemplate && config.groupRows\">\n            <ng-container\n              *ngFor=\"let group of grouped; let rowIndex = index\">\n              <tr>\n                <td [attr.colspan]=\"columns.length\">\n                  <div>{{group[0][groupRowsBy]}} ({{group.length}})</div>\n                </td>\n                <td>\n                  <span class=\"ngx-icon ngx-c-hand\"\n                        [class.ngx-icon-arrow-down]=\"selectedDetailsTemplateRowId === rowIndex\"\n                        [class.ngx-icon-arrow-right]=\"selectedDetailsTemplateRowId !== rowIndex\"\n                        (click)=\"selectRowId(rowIndex)\">\n                  </span>\n                </td>\n              </tr>\n              <ng-container *ngIf=\"selectedDetailsTemplateRowId === rowIndex\">\n                <tr *ngFor=\"let row of group\">\n                  <td *ngFor=\"let column of columns\">\n                    {{row[column['key']]}}\n                    <!-- TODO allow users to add groupRowsTemplateRef -->\n                  </td>\n                  <td></td>\n                </tr>\n              </ng-container>\n            </ng-container>\n          </ng-container>\n          </tbody>\n          <tbody *ngIf=\"!data\">\n          <tr class=\"ngx-table__body-empty\">\n            <td>No results</td>\n          </tr>\n          </tbody>\n          <tbody *ngIf=\"config.isLoading\">\n          <tr class=\"ngx-table__body-loading\">\n            <td>\n              <div class=\"ngx-table__table-loader\"></div>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n      <pagination\n        *ngIf=\"config.paginationEnabled\"\n        [id]=\"id\"\n        [pagination]=\"pagination\"\n        (updateRange)=\"onPagination($event)\">\n      </pagination>\n    </div>\n  ","styles":["\n    * {\n      font-family: Verdana, serif;\n    }\n\n    .ngx-table__table-row--selected {\n      background: #9cbff9 !important;\n    }\n\n    .ngx-table__table-col--selected {\n      background: #9cbff9 !important;\n    }\n\n    .ngx-table__table-cell--selected {\n      background: #9cbff9 !important;\n    }\n    .ngx-table__table-loader {\n      border: 4px solid #f3f3f3;\n      border-top: 4px solid #3498db;\n      border-radius: 50%;\n      height: 20px;\n      width: 20px;\n      margin-left: auto;\n      margin-right: auto;\n      -webkit-animation: spin 1s linear infinite;\n              animation: spin 1s linear infinite;\n    }\n\n    @-webkit-keyframes spin {\n      0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\n      100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\n    }\n\n    @keyframes spin {\n      0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\n      100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\n    }\n  "],"changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy"},"member":"OnPush"}}]}],"members":{"configuration":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"data":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"pagination":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"groupRowsBy":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"detailsTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"columns":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"event":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"rowTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild"},"arguments":[{"__symbolic":"reference","module":"@angular/core","name":"TemplateRef"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef"},{"__symbolic":"reference","name":"ɵd"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"orderBy":[{"__symbolic":"method"}],"clickedCell":[{"__symbolic":"method"}],"toggleColumn":[{"__symbolic":"method"}],"onSearch":[{"__symbolic":"method"}],"onGlobalSearch":[{"__symbolic":"method"}],"onPagination":[{"__symbolic":"method"}],"onOrder":[{"__symbolic":"method"}],"emitEvent":[{"__symbolic":"method"}],"selectRowId":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"sortBy":[{"__symbolic":"method"}],"compare":[{"__symbolic":"method"}]}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"error":[{"__symbolic":"method"}],"warn":[{"__symbolic":"method"}],"info":[{"__symbolic":"method"}],"debug":[{"__symbolic":"method"}],"log":[{"__symbolic":"method"}]}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{},"statics":{"config":{"searchEnabled":false,"headerEnabled":true,"orderEnabled":true,"globalSearchEnabled":false,"paginationEnabled":true,"exportEnabled":false,"clickEvent":true,"selectRow":false,"selectCol":false,"selectCell":false,"rows":10,"additionalActions":false,"serverPagination":false,"isLoading":true,"detailsTemplate":false,"groupRows":false,"paginationRangeEnabled":true}}},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"global-search","template":"\n    <label class=\"form-label ngx-float-right\" for=\"search\">\n      <input type=\"text\"\n             id=\"search\"\n             class=\"ngx-table__global-search ngx-form-input ngx-input-sm\"\n             #input\n             (input)=\"globalUpdate.emit({value: input.value})\"\n             placeholder=\"Search\"/>\n    </label>\n  "}]}],"members":{"globalUpdate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}]}},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"csv-export","template":"\n    <a (click)=\"exportCsv()\">\n      CSV export\n    </a>"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵc"}]}],"exportCsv":[{"__symbolic":"method"}]}},"ɵh":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"table-header","template":"\n    <label for=\"search_{{ column['key'] }}\">\n      <input type=\"text\"\n             id=\"search_{{ column['key'] }}\"\n             aria-label=\"Search\"\n             placeholder=\"Search {{ column['title'] }}\"\n             class=\"ngx-table__header-search ngx-form-input ngx-input-sm\"\n             #input\n             (input)=\"update.emit({value: input.value, key: column['key']})\"\n      >\n    </label>"}]}],"members":{"column":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"update":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}]}},"ɵi":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"pagination","template":"\n    <div class=\"ngx-columns\">\n      <div class=\"ngx-col-mr-auto pagination-mobile\">\n        <pagination-controls\n          [id]=\"id\"\n          [maxSize]=\"5\"\n          [previousLabel]=\"''\"\n          [nextLabel]=\"''\"\n          (pageChange)=\"onPageChange($event)\">\n        </pagination-controls>\n      </div>\n      <div class=\"pagination-mobile\" *ngIf=\"config.paginationRangeEnabled\">\n        <div class=\"ngx-dropdown ngx-range-dropdown ngx-float-right\"\n             [class.ngx-active]=\"showRange\"\n             id=\"rowAmount\">\n          <div class=\"ngx-btn-group\">\n            <span class=\"ngx-btn ngx-range-dropdown-button\"\n                  (click)=\"showRange = !showRange\">\n              {{limit}} <i class=\"ngx-icon ngx-icon-arrow-down\"></i>\n            </span>\n            <ul class=\"ngx-menu\">\n              <li class=\"ngx-c-hand ngx-range-dropdown-button\"\n                  (click)=\"changeLimit(limit)\"\n                  *ngFor=\"let limit of ranges\">\n                <span>{{limit}}</span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  ","styles":["\n    :host /deep/ pagination-controls > pagination-template > ul > li {\n      border: 1px solid #f0f0f0;\n    }\n    @media screen and (max-width: 480px) {\n      .pagination-mobile {\n        margin-right: auto;\n        margin-left: auto;\n      }\n    }\n\n    .ngx-btn {\n      color: #4f596c;\n      border: 1px solid #f0f0f0;\n    }\n\n    .ngx-range-dropdown {\n      margin-top: 16px;\n    }\n\n    .ngx-range-dropdown-button {\n      padding: 4px;\n    }\n\n    .ngx-menu {\n      min-width: 55px;\n    }\n  "],"changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy"},"member":"OnPush"}}]}],"members":{"pagination":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"id":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"updateRange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"onPageChange":[{"__symbolic":"method"}],"changeLimit":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵj":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe"},"arguments":[{"name":"search"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵc"}]}],"transform":[{"__symbolic":"method"}]}},"ɵk":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe"},"arguments":[{"name":"global"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵc"}]}],"transform":[{"__symbolic":"method"}]}}},"origins":{"TableModule":"./src/app/ngx-easy-table/table.module","ɵa":"./src/app/ngx-easy-table/components/base/base.module","ɵb":"./src/app/ngx-easy-table/components/base/base.component","ɵc":"./src/app/ngx-easy-table/services/resource-service","ɵd":"./src/app/ngx-easy-table/services/logger.service","ɵe":"./src/app/ngx-easy-table/services/config-service","ɵf":"./src/app/ngx-easy-table/components/global-search/global-search.component","ɵg":"./src/app/ngx-easy-table/components/csv-export.component","ɵh":"./src/app/ngx-easy-table/components/header/header.component","ɵi":"./src/app/ngx-easy-table/components/pagination/pagination.component","ɵj":"./src/app/ngx-easy-table/pipes/header-pipe","ɵk":"./src/app/ngx-easy-table/pipes/global-search-pipe"},"importAs":"ngx-easy-table"}