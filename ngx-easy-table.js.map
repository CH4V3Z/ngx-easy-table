{"version":3,"file":"ngx-easy-table.js","sources":["ts/ngx-easy-table.ts","ts/src/app/ngx-easy-table/table.module.ts","ts/src/app/ngx-easy-table/components/base/base.module.ts","../../node_modules/ngx-pagination/dist/ngx-pagination.js","ts/src/app/ngx-easy-table/components/csv-export.component.ts","ts/src/app/ngx-easy-table/components/pagination/pagination.component.ts","ts/src/app/ngx-easy-table/components/header/header.component.ts","ts/src/app/ngx-easy-table/pipes/header-pipe.ts","ts/src/app/ngx-easy-table/pipes/global-search-pipe.ts","ts/src/app/ngx-easy-table/components/global-search/global-search.component.ts","ts/src/app/ngx-easy-table/components/base/base.component.ts","ts/src/app/ngx-easy-table/services/logger.service.ts","ts/src/app/ngx-easy-table/model/event.enum.ts","ts/src/app/ngx-easy-table/services/config-service.ts","ts/src/app/ngx-easy-table/services/resource-service.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {TableModule} from './index';\n\nexport {BaseComponent as ɵb} from './src/app/ngx-easy-table/components/base/base.component';\nexport {BaseModule as ɵa} from './src/app/ngx-easy-table/components/base/base.module';\nexport {CsvExportComponent as ɵg} from './src/app/ngx-easy-table/components/csv-export.component';\nexport {GlobalSearchComponent as ɵf} from './src/app/ngx-easy-table/components/global-search/global-search.component';\nexport {HeaderComponent as ɵh} from './src/app/ngx-easy-table/components/header/header.component';\nexport {PaginationComponent as ɵi} from './src/app/ngx-easy-table/components/pagination/pagination.component';\nexport {GlobalSearchPipe as ɵk} from './src/app/ngx-easy-table/pipes/global-search-pipe';\nexport {SearchPipe as ɵj} from './src/app/ngx-easy-table/pipes/header-pipe';\nexport {ConfigService as ɵe} from './src/app/ngx-easy-table/services/config-service';\nexport {LoggerService as ɵd} from './src/app/ngx-easy-table/services/logger.service';\nexport {ResourceService as ɵc} from './src/app/ngx-easy-table/services/resource-service';","import { NgModule } from '@angular/core';\nimport { BaseComponent } from './components/base/base.component';\nimport { BaseModule } from './components/base/base.module';\nimport { CommonModule } from '@angular/common';\nexport class TableModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    BaseModule,\n  ],\n  bootstrap: [BaseComponent],\n  exports: [BaseComponent],\n  providers: []\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TableModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTableModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTableModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseComponent } from './base.component';\nimport { GlobalSearchComponent } from '../global-search/global-search.component';\nimport { GlobalSearchPipe } from '../../pipes/global-search-pipe';\nimport { SearchPipe } from '../../pipes/header-pipe';\nimport { HeaderComponent } from '../header/header.component';\nimport { PaginationComponent } from '../pagination/pagination.component';\nimport { CsvExportComponent } from '../csv-export.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nexport class BaseModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    BaseComponent,\n    GlobalSearchComponent,\n    CsvExportComponent,\n    HeaderComponent,\n    PaginationComponent,\n    SearchPipe,\n    GlobalSearchPipe\n  ],\n  imports: [\n    CommonModule,\n    NgxPaginationModule\n  ],\n  exports: [BaseComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BaseModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBaseModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, EventEmitter, Input, NgModule, Output, Pipe, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nvar PaginationService = (function () {\r\n    function PaginationService() {\r\n        this.change = new EventEmitter();\r\n        this.instances = {};\r\n        this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\r\n    }\r\n    PaginationService.prototype.defaultId = function () { return this.DEFAULT_ID; };\r\n    PaginationService.prototype.register = function (instance) {\r\n        if (!instance.id) {\r\n            instance.id = this.DEFAULT_ID;\r\n        }\r\n        if (!this.instances[instance.id]) {\r\n            this.instances[instance.id] = instance;\r\n            this.change.emit(instance.id);\r\n        }\r\n        else {\r\n            var changed = this.updateInstance(instance);\r\n            if (changed) {\r\n                this.change.emit(instance.id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Check each property of the instance and update any that have changed. Return\r\n     * true if any changes were made, else return false.\r\n     */\r\n    PaginationService.prototype.updateInstance = function (instance) {\r\n        var changed = false;\r\n        for (var prop in this.instances[instance.id]) {\r\n            if (instance[prop] !== this.instances[instance.id][prop]) {\r\n                this.instances[instance.id][prop] = instance[prop];\r\n                changed = true;\r\n            }\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * Returns the current page number.\r\n     */\r\n    PaginationService.prototype.getCurrentPage = function (id) {\r\n        if (this.instances[id]) {\r\n            return this.instances[id].currentPage;\r\n        }\r\n    };\r\n    /**\r\n     * Sets the current page number.\r\n     */\r\n    PaginationService.prototype.setCurrentPage = function (id, page) {\r\n        if (this.instances[id]) {\r\n            var instance = this.instances[id];\r\n            var maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n            if (page <= maxPage && 1 <= page) {\r\n                this.instances[id].currentPage = page;\r\n                this.change.emit(id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.totalItems\r\n     */\r\n    PaginationService.prototype.setTotalItems = function (id, totalItems) {\r\n        if (this.instances[id] && 0 <= totalItems) {\r\n            this.instances[id].totalItems = totalItems;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.itemsPerPage.\r\n     */\r\n    PaginationService.prototype.setItemsPerPage = function (id, itemsPerPage) {\r\n        if (this.instances[id]) {\r\n            this.instances[id].itemsPerPage = itemsPerPage;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a clone of the pagination instance object matching the id. If no\r\n     * id specified, returns the instance corresponding to the default id.\r\n     */\r\n    PaginationService.prototype.getInstance = function (id) {\r\n        if (id === void 0) { id = this.DEFAULT_ID; }\r\n        if (this.instances[id]) {\r\n            return this.clone(this.instances[id]);\r\n        }\r\n        return {};\r\n    };\r\n    /**\r\n     * Perform a shallow clone of an object.\r\n     */\r\n    PaginationService.prototype.clone = function (obj) {\r\n        var target = {};\r\n        for (var i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                target[i] = obj[i];\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n    return PaginationService;\r\n}());\n\nvar LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\r\nvar PaginatePipe = (function () {\r\n    function PaginatePipe(service) {\r\n        this.service = service;\r\n        // store the values from the last time the pipe was invoked\r\n        this.state = {};\r\n    }\r\n    PaginatePipe.prototype.transform = function (collection, args) {\r\n        // When an observable is passed through the AsyncPipe, it will output\r\n        // `null` until the subscription resolves. In this case, we want to\r\n        // use the cached data from the `state` object to prevent the NgFor\r\n        // from flashing empty until the real values arrive.\r\n        if (args instanceof Array) {\r\n            // compatible with angular2 before beta16\r\n            args = args[0];\r\n        }\r\n        if (!(collection instanceof Array)) {\r\n            var _id = args.id || this.service.defaultId;\r\n            if (this.state[_id]) {\r\n                return this.state[_id].slice;\r\n            }\r\n            else {\r\n                return collection;\r\n            }\r\n        }\r\n        var serverSideMode = args.totalItems && args.totalItems !== collection.length;\r\n        var instance = this.createInstance(collection, args);\r\n        var id = instance.id;\r\n        var start, end;\r\n        var perPage = instance.itemsPerPage;\r\n        this.service.register(instance);\r\n        if (!serverSideMode && collection instanceof Array) {\r\n            perPage = +perPage || LARGE_NUMBER;\r\n            start = (instance.currentPage - 1) * perPage;\r\n            end = start + perPage;\r\n            var isIdentical = this.stateIsIdentical(id, collection, start, end);\r\n            if (isIdentical) {\r\n                return this.state[id].slice;\r\n            }\r\n            else {\r\n                var slice = collection.slice(start, end);\r\n                this.saveState(id, collection, slice, start, end);\r\n                this.service.change.emit(id);\r\n                return slice;\r\n            }\r\n        }\r\n        // save the state for server-side collection to avoid null\r\n        // flash as new data loads.\r\n        this.saveState(id, collection, collection, start, end);\r\n        return collection;\r\n    };\r\n    /**\r\n     * Create an PaginationInstance object, using defaults for any optional properties not supplied.\r\n     */\r\n    PaginatePipe.prototype.createInstance = function (collection, args) {\r\n        var config = args;\r\n        this.checkConfig(config);\r\n        return {\r\n            id: config.id || this.service.defaultId(),\r\n            itemsPerPage: +config.itemsPerPage || 0,\r\n            currentPage: +config.currentPage || 1,\r\n            totalItems: +config.totalItems || collection.length\r\n        };\r\n    };\r\n    /**\r\n     * Ensure the argument passed to the filter contains the required properties.\r\n     */\r\n    PaginatePipe.prototype.checkConfig = function (config) {\r\n        var required = ['itemsPerPage', 'currentPage'];\r\n        var missing = required.filter(function (prop) { return !(prop in config); });\r\n        if (0 < missing.length) {\r\n            throw new Error(\"PaginatePipe: Argument is missing the following required properties: \" + missing.join(', '));\r\n        }\r\n    };\r\n    /**\r\n     * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n     * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n     * need to check that the collection, start and end points are all identical, and if so, return the\r\n     * last sliced array.\r\n     */\r\n    PaginatePipe.prototype.saveState = function (id, collection, slice, start, end) {\r\n        this.state[id] = {\r\n            collection: collection,\r\n            size: collection.length,\r\n            slice: slice,\r\n            start: start,\r\n            end: end\r\n        };\r\n    };\r\n    /**\r\n     * For a given id, returns true if the collection, size, start and end values are identical.\r\n     */\r\n    PaginatePipe.prototype.stateIsIdentical = function (id, collection, start, end) {\r\n        var state = this.state[id];\r\n        if (!state) {\r\n            return false;\r\n        }\r\n        var isMetaDataIdentical = state.size === collection.length &&\r\n            state.start === start &&\r\n            state.end === end;\r\n        if (!isMetaDataIdentical) {\r\n            return false;\r\n        }\r\n        return state.slice.every(function (element, index) { return element === collection[start + index]; });\r\n    };\r\n    PaginatePipe.decorators = [\r\n        { type: Pipe, args: [{\r\n                    name: 'paginate',\r\n                    pure: false\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PaginatePipe.ctorParameters = function () { return [\r\n        { type: PaginationService, },\r\n    ]; };\r\n    return PaginatePipe;\r\n}());\n\n/**\r\n * The default template and styles for the pagination links are borrowed directly\r\n * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n */\r\nvar DEFAULT_TEMPLATE = \"\\n    <pagination-template  #p=\\\"paginationApi\\\"\\n                         [id]=\\\"id\\\"\\n                         [maxSize]=\\\"maxSize\\\"\\n                         (pageChange)=\\\"pageChange.emit($event)\\\">\\n    <ul class=\\\"ngx-pagination\\\" \\n        role=\\\"navigation\\\" \\n        [attr.aria-label]=\\\"screenReaderPaginationLabel\\\" \\n        *ngIf=\\\"!(autoHide && p.pages.length <= 1)\\\">\\n\\n        <li class=\\\"pagination-previous\\\" [class.disabled]=\\\"p.isFirstPage()\\\" *ngIf=\\\"directionLinks\\\"> \\n            <a *ngIf=\\\"1 < p.getCurrent()\\\" (click)=\\\"p.previous()\\\" [attr.aria-label]=\\\"previousLabel + ' ' + screenReaderPageLabel\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isFirstPage()\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li>\\n\\n        <li [class.current]=\\\"p.getCurrent() === page.value\\\" *ngFor=\\\"let page of p.pages\\\">\\n            <a (click)=\\\"p.setCurrent(page.value)\\\" *ngIf=\\\"p.getCurrent() !== page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }} </span>\\n                <span>{{ page.label }}</span>\\n            </a>\\n            <div *ngIf=\\\"p.getCurrent() === page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderCurrentLabel }} </span>\\n                <span>{{ page.label }}</span> \\n            </div>\\n        </li>\\n\\n        <li class=\\\"pagination-next\\\" [class.disabled]=\\\"p.isLastPage()\\\" *ngIf=\\\"directionLinks\\\">\\n            <a *ngIf=\\\"!p.isLastPage()\\\" (click)=\\\"p.next()\\\" [attr.aria-label]=\\\"nextLabel + ' ' + screenReaderPageLabel\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isLastPage()\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li>\\n\\n    </ul>\\n    </pagination-template>\\n    \";\r\nvar DEFAULT_STYLES = \"\\n.ngx-pagination {\\n  margin-left: 0;\\n  margin-bottom: 1rem; }\\n  .ngx-pagination::before, .ngx-pagination::after {\\n    content: ' ';\\n    display: table; }\\n  .ngx-pagination::after {\\n    clear: both; }\\n  .ngx-pagination li {\\n    -moz-user-select: none;\\n    -webkit-user-select: none;\\n    -ms-user-select: none;\\n    margin-right: 0.0625rem;\\n    border-radius: 0; }\\n  .ngx-pagination li {\\n    display: inline-block; }\\n  .ngx-pagination a,\\n  .ngx-pagination button {\\n    color: #0a0a0a; \\n    display: block;\\n    padding: 0.1875rem 0.625rem;\\n    border-radius: 0; }\\n    .ngx-pagination a:hover,\\n    .ngx-pagination button:hover {\\n      background: #e6e6e6; }\\n  .ngx-pagination .current {\\n    padding: 0.1875rem 0.625rem;\\n    background: #2199e8;\\n    color: #fefefe;\\n    cursor: default; }\\n  .ngx-pagination .disabled {\\n    padding: 0.1875rem 0.625rem;\\n    color: #cacaca;\\n    cursor: default; } \\n    .ngx-pagination .disabled:hover {\\n      background: transparent; }\\n  .ngx-pagination .ellipsis::after {\\n    content: '\\u2026';\\n    padding: 0.1875rem 0.625rem;\\n    color: #0a0a0a; }\\n  .ngx-pagination a, .ngx-pagination button {\\n    cursor: pointer; }\\n\\n.ngx-pagination .pagination-previous a::before,\\n.ngx-pagination .pagination-previous.disabled::before { \\n  content: '\\u00AB';\\n  display: inline-block;\\n  margin-right: 0.5rem; }\\n\\n.ngx-pagination .pagination-next a::after,\\n.ngx-pagination .pagination-next.disabled::after {\\n  content: '\\u00BB';\\n  display: inline-block;\\n  margin-left: 0.5rem; }\\n\\n.ngx-pagination .show-for-sr {\\n  position: absolute !important;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0); }\";\n\n/**\r\n * The default pagination controls component. Actually just a default implementation of a custom template.\r\n */\r\nvar PaginationControlsComponent = (function () {\r\n    function PaginationControlsComponent() {\r\n        this.maxSize = 7;\r\n        this.previousLabel = 'Previous';\r\n        this.nextLabel = 'Next';\r\n        this.screenReaderPaginationLabel = 'Pagination';\r\n        this.screenReaderPageLabel = 'page';\r\n        this.screenReaderCurrentLabel = \"You're on page\";\r\n        this.pageChange = new EventEmitter();\r\n        this._directionLinks = true;\r\n        this._autoHide = false;\r\n    }\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"directionLinks\", {\r\n        get: function () {\r\n            return this._directionLinks;\r\n        },\r\n        set: function (value) {\r\n            this._directionLinks = !!value && value !== 'false';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"autoHide\", {\r\n        get: function () {\r\n            return this._autoHide;\r\n        },\r\n        set: function (value) {\r\n            this._autoHide = !!value && value !== 'false';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PaginationControlsComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: 'pagination-controls',\r\n                    template: DEFAULT_TEMPLATE,\r\n                    styles: [DEFAULT_STYLES],\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    encapsulation: ViewEncapsulation.None\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PaginationControlsComponent.ctorParameters = function () { return []; };\r\n    PaginationControlsComponent.propDecorators = {\r\n        'id': [{ type: Input },],\r\n        'maxSize': [{ type: Input },],\r\n        'directionLinks': [{ type: Input },],\r\n        'autoHide': [{ type: Input },],\r\n        'previousLabel': [{ type: Input },],\r\n        'nextLabel': [{ type: Input },],\r\n        'screenReaderPaginationLabel': [{ type: Input },],\r\n        'screenReaderPageLabel': [{ type: Input },],\r\n        'screenReaderCurrentLabel': [{ type: Input },],\r\n        'pageChange': [{ type: Output },],\r\n    };\r\n    return PaginationControlsComponent;\r\n}());\n\n/**\r\n * This directive is what powers all pagination controls components, including the default one.\r\n * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync\r\n * with the pagination controls.\r\n */\r\nvar PaginationControlsDirective = (function () {\r\n    function PaginationControlsDirective(service, changeDetectorRef) {\r\n        var _this = this;\r\n        this.service = service;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.maxSize = 7;\r\n        this.pageChange = new EventEmitter();\r\n        this.pages = [];\r\n        this.changeSub = this.service.change\r\n            .subscribe(function (id) {\r\n            if (_this.id === id) {\r\n                _this.updatePageLinks();\r\n                _this.changeDetectorRef.markForCheck();\r\n                _this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    PaginationControlsDirective.prototype.ngOnInit = function () {\r\n        if (this.id === undefined) {\r\n            this.id = this.service.defaultId();\r\n        }\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnChanges = function (changes) {\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnDestroy = function () {\r\n        this.changeSub.unsubscribe();\r\n    };\r\n    /**\r\n     * Go to the previous page\r\n     */\r\n    PaginationControlsDirective.prototype.previous = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() - 1);\r\n    };\r\n    /**\r\n     * Go to the next page\r\n     */\r\n    PaginationControlsDirective.prototype.next = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() + 1);\r\n    };\r\n    /**\r\n     * Returns true if current page is first page\r\n     */\r\n    PaginationControlsDirective.prototype.isFirstPage = function () {\r\n        return this.getCurrent() === 1;\r\n    };\r\n    /**\r\n     * Returns true if current page is last page\r\n     */\r\n    PaginationControlsDirective.prototype.isLastPage = function () {\r\n        return this.getLastPage() === this.getCurrent();\r\n    };\r\n    /**\r\n     * Set the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.setCurrent = function (page) {\r\n        this.pageChange.emit(page);\r\n    };\r\n    /**\r\n     * Get the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.getCurrent = function () {\r\n        return this.service.getCurrentPage(this.id);\r\n    };\r\n    /**\r\n     * Returns the last page number\r\n     */\r\n    PaginationControlsDirective.prototype.getLastPage = function () {\r\n        var inst = this.service.getInstance(this.id);\r\n        if (inst.totalItems < 1) {\r\n            // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\r\n            // but it makes sense to consider a single, empty page as the last page.\r\n            return 1;\r\n        }\r\n        return Math.ceil(inst.totalItems / inst.itemsPerPage);\r\n    };\r\n    PaginationControlsDirective.prototype.checkValidId = function () {\r\n        if (!this.service.getInstance(this.id).id) {\r\n            console.warn(\"PaginationControlsDirective: the specified id \\\"\" + this.id + \"\\\" does not match any registered PaginationInstance\");\r\n        }\r\n    };\r\n    /**\r\n     * Updates the page links and checks that the current page is valid. Should run whenever the\r\n     * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n     * input values changes.\r\n     */\r\n    PaginationControlsDirective.prototype.updatePageLinks = function () {\r\n        var _this = this;\r\n        var inst = this.service.getInstance(this.id);\r\n        var correctedCurrentPage = this.outOfBoundCorrection(inst);\r\n        if (correctedCurrentPage !== inst.currentPage) {\r\n            setTimeout(function () {\r\n                _this.setCurrent(correctedCurrentPage);\r\n                _this.pages = _this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, _this.maxSize);\r\n            });\r\n        }\r\n        else {\r\n            this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n        }\r\n    };\r\n    /**\r\n     * Checks that the instance.currentPage property is within bounds for the current page range.\r\n     * If not, return a correct value for currentPage, or the current value if OK.\r\n     */\r\n    PaginationControlsDirective.prototype.outOfBoundCorrection = function (instance) {\r\n        var totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n        if (totalPages < instance.currentPage && 0 < totalPages) {\r\n            return totalPages;\r\n        }\r\n        else if (instance.currentPage < 1) {\r\n            return 1;\r\n        }\r\n        return instance.currentPage;\r\n    };\r\n    /**\r\n     * Returns an array of Page objects to use in the pagination controls.\r\n     */\r\n    PaginationControlsDirective.prototype.createPageArray = function (currentPage, itemsPerPage, totalItems, paginationRange) {\r\n        // paginationRange could be a string if passed from attribute, so cast to number.\r\n        paginationRange = +paginationRange;\r\n        var pages = [];\r\n        var totalPages = Math.ceil(totalItems / itemsPerPage);\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        var isStart = currentPage <= halfWay;\r\n        var isEnd = totalPages - halfWay < currentPage;\r\n        var isMiddle = !isStart && !isEnd;\r\n        var ellipsesNeeded = paginationRange < totalPages;\r\n        var i = 1;\r\n        while (i <= totalPages && i <= paginationRange) {\r\n            var label = void 0;\r\n            var pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\r\n            var openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));\r\n            var closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));\r\n            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\r\n                label = '...';\r\n            }\r\n            else {\r\n                label = pageNumber;\r\n            }\r\n            pages.push({\r\n                label: label,\r\n                value: pageNumber\r\n            });\r\n            i++;\r\n        }\r\n        return pages;\r\n    };\r\n    /**\r\n     * Given the position in the sequence of pagination links [i],\r\n     * figure out what page number corresponds to that position.\r\n     */\r\n    PaginationControlsDirective.prototype.calculatePageNumber = function (i, currentPage, paginationRange, totalPages) {\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        if (i === paginationRange) {\r\n            return totalPages;\r\n        }\r\n        else if (i === 1) {\r\n            return i;\r\n        }\r\n        else if (paginationRange < totalPages) {\r\n            if (totalPages - halfWay < currentPage) {\r\n                return totalPages - paginationRange + i;\r\n            }\r\n            else if (halfWay < currentPage) {\r\n                return currentPage - halfWay + i;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        else {\r\n            return i;\r\n        }\r\n    };\r\n    PaginationControlsDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: 'pagination-template,[pagination-template]',\r\n                    exportAs: 'paginationApi'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PaginationControlsDirective.ctorParameters = function () { return [\r\n        { type: PaginationService, },\r\n        { type: ChangeDetectorRef, },\r\n    ]; };\r\n    PaginationControlsDirective.propDecorators = {\r\n        'id': [{ type: Input },],\r\n        'maxSize': [{ type: Input },],\r\n        'pageChange': [{ type: Output },],\r\n    };\r\n    return PaginationControlsDirective;\r\n}());\n\nvar NgxPaginationModule = (function () {\r\n    function NgxPaginationModule() {\r\n    }\r\n    NgxPaginationModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [\r\n                        PaginatePipe,\r\n                        PaginationControlsComponent,\r\n                        PaginationControlsDirective\r\n                    ],\r\n                    providers: [PaginationService],\r\n                    exports: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NgxPaginationModule.ctorParameters = function () { return []; };\r\n    return NgxPaginationModule;\r\n}());\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DEFAULT_STYLES as ɵb, DEFAULT_TEMPLATE as ɵa, NgxPaginationModule, PaginationService, PaginationControlsComponent, PaginationControlsDirective, PaginatePipe };\n","import { Component } from '@angular/core';\nimport { ResourceService } from '../services/resource-service';\nexport class CsvExportComponent {\n/**\n * @param {?} resource\n */\nconstructor(public resource: ResourceService) {\n  }\n/**\n * @return {?}\n */\npublic exportCsv() {\n    const /** @type {?} */ data = this.resource.data;\n    let /** @type {?} */ csvContent = 'data:text/csv;charset=utf-8,';\n    let /** @type {?} */ dataString = '';\n    const /** @type {?} */ x: Array<any> = [];\n    const /** @type {?} */ keys = Object.keys(this.resource.data[0]);\n    data.forEach((row, index) => {\n      x[index] = [];\n      keys.forEach((i) => {\n        if (row.hasOwnProperty(i)) {\n          if (typeof row[i] === 'object') {\n            row[i] = 'Object'; // so far just change object to \"Object\" string\n          }\n          x[index].push(row[i]);\n        }\n      });\n    });\n\n    csvContent += keys + '\\n';\n    x.forEach((row, index) => {\n      dataString = row.join(',');\n      csvContent += index < data.length ? dataString + '\\n' : dataString;\n    });\n    const /** @type {?} */ encodedUri = encodeURI(csvContent);\n    const /** @type {?} */ link = document.createElement('a');\n    link.setAttribute('href', encodedUri);\n    link.setAttribute('download', 'my_data.csv');\n\n    link.click();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'csv-export',\n  template: `\n    <a (click)=\"exportCsv()\">\n      CSV export\n    </a>`\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ResourceService, },\n];\n}\n\nfunction CsvExportComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCsvExportComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCsvExportComponent.ctorParameters;\n/** @type {?} */\nCsvExportComponent.prototype.resource;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  ChangeDetectionStrategy, Component, EventEmitter, Input, Output, OnInit\n} from '@angular/core';\nimport { ConfigService } from '../../services/config-service';\nimport { Config } from '../../model/config';\nexport class PaginationComponent implements OnInit {\n   pagination;\n   id;\n   updateRange = new EventEmitter();\npublic config: Config;\npublic ranges = [5, 10, 25, 50, 100];\npublic limit = ConfigService.config.rows;\npublic showRange = false;\n/**\n * @param {?} $event\n * @return {?}\n */\nonPageChange($event) {\n    this.updateRange.emit({\n      page: $event,\n      limit: this.limit\n    });\n  }\n/**\n * @param {?} limit\n * @return {?}\n */\nchangeLimit(limit): void {\n    this.showRange = !this.showRange;\n    this.limit = limit;\n    this.updateRange.emit({\n      page: 1,\n      limit: limit\n    });\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this.config = ConfigService.config;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'pagination',\n  template: `\n    <div class=\"ngx-columns\">\n      <div class=\"ngx-col-mr-auto pagination-mobile\">\n        <pagination-controls\n          [id]=\"id\"\n          [maxSize]=\"5\"\n          [previousLabel]=\"''\"\n          [nextLabel]=\"''\"\n          (pageChange)=\"onPageChange($event)\">\n        </pagination-controls>\n      </div>\n      <div class=\"pagination-mobile\" *ngIf=\"config.paginationRangeEnabled\">\n        <div class=\"ngx-dropdown ngx-range-dropdown ngx-float-right\"\n             [class.ngx-active]=\"showRange\"\n             id=\"rowAmount\">\n          <div class=\"ngx-btn-group\">\n            <span class=\"ngx-btn ngx-range-dropdown-button\"\n                  (click)=\"showRange = !showRange\">\n              {{limit}} <i class=\"ngx-icon ngx-icon-arrow-down\"></i>\n            </span>\n            <ul class=\"ngx-menu\">\n              <li class=\"ngx-c-hand ngx-range-dropdown-button\"\n                  (click)=\"changeLimit(limit)\"\n                  *ngFor=\"let limit of ranges\">\n                <span>{{limit}}</span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    :host /deep/ pagination-controls > pagination-template > ul > li {\n      border: 1px solid #f0f0f0;\n    }\n    @media screen and (max-width: 480px) {\n      .pagination-mobile {\n        margin-right: auto;\n        margin-left: auto;\n      }\n    }\n\n    .ngx-btn {\n      color: #4f596c;\n      border: 1px solid #f0f0f0;\n    }\n\n    .ngx-range-dropdown {\n      margin-top: 16px;\n    }\n\n    .ngx-range-dropdown-button {\n      padding: 4px;\n    }\n\n    .ngx-menu {\n      min-width: 55px;\n    }\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'pagination': [{ type: Input },],\n'id': [{ type: Input },],\n'updateRange': [{ type: Output },],\n};\n}\n\nfunction PaginationComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nPaginationComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPaginationComponent.ctorParameters;\n/** @type {?} */\nPaginationComponent.propDecorators;\n/** @type {?} */\nPaginationComponent.prototype.pagination;\n/** @type {?} */\nPaginationComponent.prototype.id;\n/** @type {?} */\nPaginationComponent.prototype.updateRange;\n/** @type {?} */\nPaginationComponent.prototype.config;\n/** @type {?} */\nPaginationComponent.prototype.ranges;\n/** @type {?} */\nPaginationComponent.prototype.limit;\n/** @type {?} */\nPaginationComponent.prototype.showRange;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nexport class HeaderComponent {\n   column;\n   update = new EventEmitter();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'table-header',\n  template: `\n    <label for=\"search_{{ column['key'] }}\">\n      <input type=\"text\"\n             id=\"search_{{ column['key'] }}\"\n             aria-label=\"Search\"\n             placeholder=\"Search {{ column['title'] }}\"\n             class=\"ngx-table__header-search ngx-form-input ngx-input-sm\"\n             #input\n             (input)=\"update.emit({value: input.value, key: column['key']})\"\n      >\n    </label>`\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'column': [{ type: Input },],\n'update': [{ type: Output },],\n};\n}\n\nfunction HeaderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nHeaderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHeaderComponent.ctorParameters;\n/** @type {?} */\nHeaderComponent.propDecorators;\n/** @type {?} */\nHeaderComponent.prototype.column;\n/** @type {?} */\nHeaderComponent.prototype.update;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { ResourceService } from '../services/resource-service';\nexport class SearchPipe implements PipeTransform {\n/**\n * @param {?} resource\n */\nconstructor(public resource: ResourceService) {\n  }\n/**\n * @param {?} value\n * @param {?} filters\n * @return {?}\n */\ntransform(value, filters) {\n    if (typeof value === 'undefined') {\n      return;\n    }\n    this.resource.data = value.slice();\n\n    if (typeof filters === 'undefined' || Object.keys(filters).length === 0) {\n      return this.resource.data;\n    }\n\n    const /** @type {?} */ filtersArr = [];\n    filtersArr[filters.key] = filters.value;\n    value.forEach((item) => {\n      for (const /** @type {?} */ filterKey in filtersArr) {\n        if (filtersArr.hasOwnProperty(filterKey)) {\n          let /** @type {?} */ element = '';\n          if (typeof item[filterKey] === 'string') {\n            element = item[filterKey].toLocaleLowerCase();\n          }\n          if (typeof item[filterKey] === 'object') {\n            element = JSON.stringify(item[filterKey]);\n          }\n          if (typeof item[filterKey] === 'number') {\n            element = item[filterKey].toString();\n          }\n          if (typeof item[filterKey] === 'boolean') {\n            element = item[filterKey].toString();\n          }\n          if (element.indexOf(filtersArr[filterKey].toLocaleLowerCase()) === -1) {\n            this.resource.data.splice(this.resource.data.indexOf(item), 1);\n            return;\n          }\n        }\n      }\n    });\n\n    return this.resource.data;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'search'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ResourceService, },\n];\n}\n\nfunction SearchPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nSearchPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSearchPipe.ctorParameters;\n/** @type {?} */\nSearchPipe.prototype.resource;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { ResourceService } from '../services/resource-service';\nexport class GlobalSearchPipe implements PipeTransform {\n/**\n * @param {?} resource\n */\nconstructor(public resource: ResourceService) {\n  }\n/**\n * @param {?} dataArr\n * @param {?} filter\n * @return {?}\n */\ntransform(dataArr, filter) {\n    if (typeof dataArr === 'undefined') {\n      return;\n    }\n    if (typeof filter === 'undefined' || Object.keys(filter).length === 0 || filter === '') {\n      return dataArr;\n    }\n    this.resource.data = [];\n    dataArr.forEach((row) => {\n      for (const /** @type {?} */ value in row) {\n        if (row.hasOwnProperty(value)) {\n          let /** @type {?} */ element;\n          if (typeof row[value] === 'object') {\n            element = JSON.stringify(row[value]).toLocaleLowerCase();\n          }\n          if (typeof row[value] === 'boolean') {\n            element = '' + row[value];\n          }\n          if (typeof row[value] === 'string') {\n            element = row[value].toLocaleLowerCase();\n          }\n          if (typeof row[value] === 'number') {\n            element = '' + row[value];\n          }\n          if (element.indexOf(filter['value'].toLocaleLowerCase()) >= 0) {\n            this.resource.data.push(row);\n            return;\n          }\n        }\n      }\n    });\n\n    return this.resource.data;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'global'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ResourceService, },\n];\n}\n\nfunction GlobalSearchPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nGlobalSearchPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGlobalSearchPipe.ctorParameters;\n/** @type {?} */\nGlobalSearchPipe.prototype.resource;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Output, EventEmitter } from '@angular/core';\nexport class GlobalSearchComponent {\n   globalUpdate = new EventEmitter();\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'global-search',\n  template: `\n    <label class=\"form-label ngx-float-right\" for=\"search\">\n      <input type=\"text\"\n             id=\"search\"\n             class=\"ngx-table__global-search ngx-form-input ngx-input-sm\"\n             #input\n             (input)=\"globalUpdate.emit({value: input.value})\"\n             placeholder=\"Search\"/>\n    </label>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'globalUpdate': [{ type: Output },],\n};\n}\n\nfunction GlobalSearchComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nGlobalSearchComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGlobalSearchComponent.ctorParameters;\n/** @type {?} */\nGlobalSearchComponent.propDecorators;\n/** @type {?} */\nGlobalSearchComponent.prototype.globalUpdate;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, EventEmitter, Input, OnChanges,\n  OnInit, Output,\n  SimpleChange, SimpleChanges, TemplateRef\n} from '@angular/core';\n\nimport { ResourceService } from '../../services/resource-service';\nimport { ConfigService } from '../../services/config-service';\nimport { Event } from '../../model/event.enum';\nimport { LoggerService } from '../../services/logger.service';\nimport { Config } from '../../model/config';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/from';\nimport'rxjs/add/operator/mergeMap';\nimport'rxjs/add/operator/reduce';\nimport'rxjs/add/operator/groupBy';\nexport class BaseComponent implements OnInit, OnChanges, AfterViewInit {\npublic selectedRow: number;\npublic selectedCol: number;\npublic term;\npublic config: Config;\npublic globalSearchTerm;\n  grouped = [];\n  menuActive = false;\n  page = 1;\n  count = null;\n  limit;\n  selectedDetailsTemplateRowId = null;\n  id;\n   configuration: Config;\n   data: Array<Object>;\n   pagination;\n   groupRowsBy;\n   detailsTemplate;\n   columns: Array<string>;\n   event = new EventEmitter();\npublic rowTemplate: TemplateRef<any>;\n/**\n * @param {?} resource\n * @param {?} cdr\n * @param {?} logger\n */\nconstructor(public resource: ResourceService,\nprivate cdr: ChangeDetectorRef,\nprivate logger: LoggerService) {\n    // make random pagination ID to avoid situation when we have more than 1 table at page\n    this.id = Math.floor((Math.random() * 10000) + 1);\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    if (this.configuration) {\n      ConfigService.config = this.configuration;\n    }\n    this.config = ConfigService.config;\n    this.limit = this.configuration.rows;\n    if (this.groupRowsBy) {\n      Observable\n        .from(this.data)\n        .groupBy(row => row[this.groupRowsBy])\n        .flatMap(group => group.reduce((acc: Array<Object>, curr) => [...acc, curr], []))\n        .subscribe(row => this.grouped.push(row));\n    }\n  }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n    this.cdr.detectChanges();\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    const /** @type {?} */ data: SimpleChange = changes.data;\n    const /** @type {?} */ pagination: SimpleChange = changes.pagination;\n    if (data && data.currentValue) {\n      this.data = [...data.currentValue];\n    }\n    if (pagination && pagination.currentValue) {\n      this.count = pagination.currentValue.count;\n    }\n  }\n/**\n * @param {?} key\n * @return {?}\n */\norderBy(key: string) {\n    if (ConfigService.config.orderEnabled || !ConfigService.config.serverPagination) {\n      this.data = this.resource.sortBy(key);\n      this.data = [...this.data];\n    }\n    this.onOrder(key);\n  }\n/**\n * @param {?} $event\n * @param {?} row\n * @param {?} key\n * @param {?} colIndex\n * @param {?} rowIndex\n * @return {?}\n */\nclickedCell($event: object, row: object, key: string | number | boolean, colIndex: number, rowIndex: number): void {\n    if (ConfigService.config.selectRow) {\n      this.selectedRow = rowIndex;\n    }\n    if (ConfigService.config.selectCol) {\n      this.selectedCol = colIndex;\n    }\n    if (ConfigService.config.selectCell) {\n      this.selectedRow = rowIndex;\n      this.selectedCol = colIndex;\n    }\n    if (ConfigService.config.clickEvent) {\n      const /** @type {?} */ value = {\n        event: $event,\n        row: row,\n        key: key,\n        rowId: rowIndex,\n        colId: colIndex\n      };\n      this.emitEvent(Event.onClick, value);\n    }\n  }\n/**\n * @param {?} colIndex\n * @return {?}\n */\ntoggleColumn(colIndex): void {\n    const /** @type {?} */ toggleColumns = new Set(this.columns);\n    if (toggleColumns.has(colIndex)) {\n      toggleColumns.delete(colIndex);\n    } else {\n      toggleColumns.add(colIndex);\n    }\n  }\n/**\n * @param {?} $event\n * @return {?}\n */\nonSearch($event): void {\n    if (!ConfigService.config.serverPagination) {\n      this.term = $event;\n    }\n    this.emitEvent(Event.onSearch, $event);\n  }\n/**\n * @param {?} $event\n * @return {?}\n */\nonGlobalSearch($event): void {\n    if (!ConfigService.config.serverPagination) {\n      this.globalSearchTerm = $event;\n    }\n    this.emitEvent(Event.onGlobalSearch, $event);\n  }\n/**\n * @param {?} $event\n * @return {?}\n */\nonPagination($event): void {\n    this.page = $event.page;\n    this.limit = $event.limit;\n    this.emitEvent(Event.onPagination, $event);\n  }\n/**\n * @param {?} key\n * @return {?}\n */\nonOrder(key): void {\n    const /** @type {?} */ value = {\n      key,\n      order: this.resource.order[key]\n    };\n    this.emitEvent(Event.onOrder, value);\n  }\n/**\n * @param {?} event\n * @param {?} value\n * @return {?}\n */\nprivate emitEvent(event, value: Object): void {\n  \n    this.event.emit({ event: Event[event], value });\n  }\n/**\n * @param {?} rowIndex\n * @return {?}\n */\nselectRowId(rowIndex) {\n    if (this.selectedDetailsTemplateRowId === rowIndex) {\n      this.selectedDetailsTemplateRowId = null;\n    } else {\n      this.selectedDetailsTemplateRowId = rowIndex;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngx-table',\n  providers: [ResourceService, LoggerService, ConfigService],\n  template: `\n    <div class=\"ngx-container\">\n      <div class=\"ngx-columns\">\n        <div class=\"ngx-column ngx-col-4 ngx-col-mr-auto\"></div>\n        <div class=\"ngx-column ngx-col-3\">\n          <global-search\n            *ngIf=\"config.globalSearchEnabled\"\n            (globalUpdate)=\"onGlobalSearch($event)\">\n          </global-search>\n        </div>\n      </div>\n      <div class=\"ngx-columns\">\n        <table class=\"ngx-table ngx-table-striped ngx-table-hover\">\n          <thead>\n          <tr class=\"ngx-table__header\" *ngIf=\"config.headerEnabled\">\n            <ng-container *ngFor=\"let column of columns\">\n              <th class=\"ngx-table__header-cell\"\n                  (click)=\"orderBy(column['key'])\">\n                <div class=\"ngx-d-inline\">{{ column['title'] }}</div>\n                <span *ngIf=\"resource.order[column['key']]==='asc' \"\n                      [style.display]=\"config.orderEnabled?'':'none' \"\n                      class=\"ngx-icon ngx-icon-arrow-up\">\n                </span>\n                <span *ngIf=\"resource.order[column['key']]==='desc' \"\n                      [style.display]=\"config.orderEnabled?'':'none' \"\n                      class=\"ngx-icon ngx-icon-arrow-down\">\n                </span>\n              </th>\n            </ng-container>\n            <th *ngIf=\"config.additionalActions || config.detailsTemplate\"\n                class=\"ngx-table__header-cell-additional-actions\">\n              <div class=\"ngx-dropdown ngx-active ngx-dropdown-right\"\n                   *ngIf=\"config.additionalActions\"\n                   [class.ngx-active]=\"menuActive\">\n                <a class=\"ngx-btn ngx-btn-link\" (click)=\"menuActive = !menuActive\">\n                  <span class=\"ngx-icon ngx-icon-menu\"></span>\n                </a>\n                <ul class=\"ngx-menu ngx-table__table-menu\">\n                  <li class=\"ngx-menu-item\">\n                    <csv-export *ngIf=\"config.exportEnabled\"></csv-export>\n                  </li>\n                </ul>\n              </div>\n            </th>\n          </tr>\n          <tr *ngIf=\"config.searchEnabled\"\n              class=\"ngx-table__sortHeader\">\n            <ng-container *ngFor=\"let column of columns\">\n              <th>\n                <table-header (update)=\"onSearch($event)\" [column]=\"column\"></table-header>\n              </th>\n            </ng-container>\n            <th *ngIf=\"config.additionalActions || config.detailsTemplate\"></th>\n          </tr>\n          </thead>\n          <tbody *ngIf=\"data && !config.isLoading\">\n          <ng-container *ngIf=\"rowTemplate\">\n            <tr *ngFor=\"let row of data | search : term | global : globalSearchTerm | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\n                  let rowIndex = index\"\n                (click)=\"clickedCell($event, row, '', '', rowIndex)\"\n                [class.ngx-table__table-row--selected]=\"rowIndex == selectedRow && !config.selectCell\">\n              <ng-container [ngTemplateOutlet]=\"rowTemplate\"\n                            [ngTemplateOutletContext]=\"{ $implicit: row }\">\n              </ng-container>\n            </tr>\n          </ng-container>\n          <ng-container *ngIf=\"!rowTemplate && !config.groupRows\">\n            <ng-container\n              *ngFor=\"let row of data | search : term | global : globalSearchTerm | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\n                      let rowIndex = index\"\n              [class.ngx-table__table-row--selected]=\"rowIndex == selectedRow && !config.selectCell\">\n              <tr>\n                <ng-container *ngFor=\"let column of columns; let colIndex = index\">\n                  <td (click)=\"clickedCell($event, row, column['key'], colIndex, rowIndex)\"\n                      [class.ngx-table__table-col--selected]=\"colIndex == selectedCol && !config.selectCell\"\n                      [class.ngx-table__table-cell--selected]=\"colIndex == selectedCol && rowIndex == selectedRow && !config.selectCol && !config.selectRow\"\n                  >\n                    <div>{{ row[column['key']] }}</div>\n                  </td>\n                </ng-container>\n                <td *ngIf=\"config.additionalActions || config.detailsTemplate\">\n                  <span class=\"ngx-icon ngx-c-hand\"\n                        [class.ngx-icon-arrow-down]=\"selectedDetailsTemplateRowId === rowIndex\"\n                        [class.ngx-icon-arrow-right]=\"selectedDetailsTemplateRowId !== rowIndex\"\n                        (click)=\"selectRowId(rowIndex)\">\n                  </span>\n                </td>\n              </tr>\n              <tr *ngIf=\"config.detailsTemplate && selectedDetailsTemplateRowId === rowIndex\">\n                <td [attr.colspan]=\"columns.length + 1\">\n                  <ng-container\n                    [ngTemplateOutlet]=\"detailsTemplate\"\n                    [ngTemplateOutletContext]=\"{ $implicit: row }\">\n                  </ng-container>\n                </td>\n              </tr>\n            </ng-container>\n          </ng-container>\n          <ng-container *ngIf=\"!rowTemplate && config.groupRows\">\n            <ng-container\n              *ngFor=\"let group of grouped; let rowIndex = index\">\n              <tr>\n                <td [attr.colspan]=\"columns.length\">\n                  <div>{{group[0][groupRowsBy]}} ({{group.length}})</div>\n                </td>\n                <td>\n                  <span class=\"ngx-icon ngx-c-hand\"\n                        [class.ngx-icon-arrow-down]=\"selectedDetailsTemplateRowId === rowIndex\"\n                        [class.ngx-icon-arrow-right]=\"selectedDetailsTemplateRowId !== rowIndex\"\n                        (click)=\"selectRowId(rowIndex)\">\n                  </span>\n                </td>\n              </tr>\n              <ng-container *ngIf=\"selectedDetailsTemplateRowId === rowIndex\">\n                <tr *ngFor=\"let row of group\">\n                  <td *ngFor=\"let column of columns\">\n                    {{row[column['key']]}}\n                    <!-- TODO allow users to add groupRowsTemplateRef -->\n                  </td>\n                  <td></td>\n                </tr>\n              </ng-container>\n            </ng-container>\n          </ng-container>\n          </tbody>\n          <tbody *ngIf=\"!data\">\n          <tr class=\"ngx-table__body-empty\">\n            <td>No results</td>\n          </tr>\n          </tbody>\n          <tbody *ngIf=\"config.isLoading\">\n          <tr class=\"ngx-table__body-loading\">\n            <td>\n              <div class=\"ngx-table__table-loader\"></div>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n      <pagination\n        *ngIf=\"config.paginationEnabled\"\n        [id]=\"id\"\n        [pagination]=\"pagination\"\n        (updateRange)=\"onPagination($event)\">\n      </pagination>\n    </div>\n  `,\n  styles: [`\n    * {\n      font-family: Verdana, serif;\n    }\n\n    .ngx-table__table-row--selected {\n      background: #9cbff9 !important;\n    }\n\n    .ngx-table__table-col--selected {\n      background: #9cbff9 !important;\n    }\n\n    .ngx-table__table-cell--selected {\n      background: #9cbff9 !important;\n    }\n    .ngx-table__table-loader {\n      border: 4px solid #f3f3f3;\n      border-top: 4px solid #3498db;\n      border-radius: 50%;\n      height: 20px;\n      width: 20px;\n      margin-left: auto;\n      margin-right: auto;\n      -webkit-animation: spin 1s linear infinite;\n              animation: spin 1s linear infinite;\n    }\n\n    @-webkit-keyframes spin {\n      0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\n      100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\n    }\n\n    @keyframes spin {\n      0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\n      100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\n    }\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ResourceService, },\n{type: ChangeDetectorRef, },\n{type: LoggerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'configuration': [{ type: Input },],\n'data': [{ type: Input },],\n'pagination': [{ type: Input },],\n'groupRowsBy': [{ type: Input },],\n'detailsTemplate': [{ type: Input },],\n'columns': [{ type: Input },],\n'event': [{ type: Output },],\n'rowTemplate': [{ type: ContentChild, args: [TemplateRef, ] },],\n};\n}\n\nfunction BaseComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBaseComponent.ctorParameters;\n/** @type {?} */\nBaseComponent.propDecorators;\n/** @type {?} */\nBaseComponent.prototype.selectedRow;\n/** @type {?} */\nBaseComponent.prototype.selectedCol;\n/** @type {?} */\nBaseComponent.prototype.term;\n/** @type {?} */\nBaseComponent.prototype.config;\n/** @type {?} */\nBaseComponent.prototype.globalSearchTerm;\n/** @type {?} */\nBaseComponent.prototype.grouped;\n/** @type {?} */\nBaseComponent.prototype.menuActive;\n/** @type {?} */\nBaseComponent.prototype.page;\n/** @type {?} */\nBaseComponent.prototype.count;\n/** @type {?} */\nBaseComponent.prototype.limit;\n/** @type {?} */\nBaseComponent.prototype.selectedDetailsTemplateRowId;\n/** @type {?} */\nBaseComponent.prototype.id;\n/** @type {?} */\nBaseComponent.prototype.configuration;\n/** @type {?} */\nBaseComponent.prototype.data;\n/** @type {?} */\nBaseComponent.prototype.pagination;\n/** @type {?} */\nBaseComponent.prototype.groupRowsBy;\n/** @type {?} */\nBaseComponent.prototype.detailsTemplate;\n/** @type {?} */\nBaseComponent.prototype.columns;\n/** @type {?} */\nBaseComponent.prototype.event;\n/** @type {?} */\nBaseComponent.prototype.rowTemplate;\n/** @type {?} */\nBaseComponent.prototype.resource;\n/** @type {?} */\nBaseComponent.prototype.cdr;\n/** @type {?} */\nBaseComponent.prototype.logger;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nexport class LoggerService {\n/**\n * @param {?=} message\n * @return {?}\n */\nerror(message?: any) {\n    console.error(message);\n  }\n/**\n * @param {?=} message\n * @return {?}\n */\nwarn(message?: any) {\n    console.warn(message);\n  }\n/**\n * @param {?=} message\n * @return {?}\n */\ninfo(message?: any) {\n    console.log(message);\n  }\n/**\n * @param {?=} message\n * @return {?}\n */\ndebug(message?: any) {\n    console.log(message);\n  }\n/**\n * @param {?=} message\n * @return {?}\n */\nlog(message?: any) {\n    console.log(message);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LoggerService_tsickle_Closure_declarations() {\n/** @type {?} */\nLoggerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLoggerService.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport type Event = number;\nexport let Event: any = {};\nEvent.onPagination = 0;\nEvent.onOrder = 1;\nEvent.onGlobalSearch = 2;\nEvent.onSearch = 3;\nEvent.onClick = 4;\nEvent[Event.onPagination] = \"onPagination\";\nEvent[Event.onOrder] = \"onOrder\";\nEvent[Event.onGlobalSearch] = \"onGlobalSearch\";\nEvent[Event.onSearch] = \"onSearch\";\nEvent[Event.onClick] = \"onClick\";\n\n","import { Injectable } from '@angular/core';\nimport { Config } from '../model/config';\nexport class ConfigService {\npublic static config: Config = {\n    searchEnabled: false,\n    headerEnabled: true,\n    orderEnabled: true,\n    globalSearchEnabled: false,\n    paginationEnabled: true,\n    exportEnabled: false,\n    clickEvent: true,\n    selectRow: false,\n    selectCol: false,\n    selectCell: false,\n    rows: 10,\n    additionalActions: false,\n    serverPagination: false,\n    isLoading: true,\n    detailsTemplate: false,\n    groupRows: false,\n    paginationRangeEnabled: true,\n  };\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ConfigService_tsickle_Closure_declarations() {\n/** @type {?} */\nConfigService.config;\n/** @type {?} */\nConfigService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nConfigService.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nexport class ResourceService {\npublic data: Array<any> = [];\npublic key: string;\npublic order: Array<any> = [];\n/**\n * @param {?} key\n * @return {?}\n */\npublic sortBy(key: string): Array<any> {\n    this.key = key;\n    if (Object.keys(this.order).length === 0) {\n      this.order[this.key] = 'asc';\n    }\n    if (this.order[this.key] === 'asc') {\n      this.order = [];\n      this.order[this.key] = 'desc';\n      this.data.sort((a, b) => this.compare(a, b));\n    } else {\n      this.order = [];\n      this.order[this.key] = 'asc';\n      this.data.sort((a, b) => this.compare(b, a));\n    }\n    return this.data;\n  }\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nprivate compare(a: Array<any>, b: Array<any>): number {\n    if ((isNaN(parseFloat(a[this.key])) || !isFinite(a[this.key])) || (isNaN(parseFloat(b[this.key])) || !isFinite(b[this.key]))) {\n      if (a[this.key] + ''.toLowerCase() < b[this.key] + ''.toLowerCase()) {\n        return -1;\n      }\n      if (a[this.key] + ''.toLowerCase() > b[this.key] + ''.toLowerCase()) {\n        return 1;\n      }\n    } else {\n      if (parseFloat(a[this.key]) < parseFloat(b[this.key])) {\n        return -1;\n      }\n      if (parseFloat(a[this.key]) > parseFloat(b[this.key])) {\n        return 1;\n      }\n    }\n\n    return 0;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ResourceService_tsickle_Closure_declarations() {\n/** @type {?} */\nResourceService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nResourceService.ctorParameters;\n/** @type {?} */\nResourceService.prototype.data;\n/** @type {?} */\nResourceService.prototype.key;\n/** @type {?} */\nResourceService.prototype.order;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["Observable"],"mappings":"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"}
